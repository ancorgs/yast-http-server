/**
 * File:	clients/http-server.ycp
 * Package:	Configuration of http-server
 * Summary:	Main file
 * Authors:	Stanislav Visnovsky <visnov@suse.cz>
 *
 * $Id$
 *
 * Main file for http-server configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of the http-server</h3>
 */

textdomain "http-server";

import "HttpServer";
import "Require";

include "commandline/commandline.ycp";

map cmdline_description = $[
    "id" 	: "http-server",
    "help"	: _("Configuration of HTTP server (Apache2)"),
    "guihandler"        : ``(HttpServerSequence()),
    "initialize"        : ``(HttpServer::Read()),
    "finish"            : ``(HttpServer::Write()),
    "actions"           : $[
	"configure"	: $[
	    "help" 	: _("Configure a host settings"),
	    "handler"	: ``(ConfigureHandler())
	],
	"modules"	: $[
	    "help"	: _("Configure the Apache2 server modules"),
	    "handler"	: ``(ModulesHandler())
	],
	"listen"	: $[
	    "help" 	: _("Setup the ports and network addresses, where should the server listen"),
	    "handler"	: ``(ListenHandler())
	],
    ],
    "options"		: $[
	"servername"	: $[
	    "type"	: "hostname",
	    "help"	: _("Server name, for example www.example.com")
	],
	"serveradmin"	: $[
	    "type"	: "email",
	    "help"	: _("E-mail address of of the server administrator")
	],
	"documentroot"	: $[
	    "type"	: "string",
	    "help"	: _("Directory, where are the documents of the server stored")
	],
	"host"		: $[
	    "type"	: "string",
	    "help"	: _("Name of the host to be configured. Only \"defaulthost\" is valid at the moment.")
	],
	"add"		: $[
	    "type"	: "regex",
	    "typespec"	: "(\[[0-9a-f:]+\]:[0-9]+)|([0-9]+)|([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)",
	    "help"	: _("Add a new listen entry ([address:]port)"),
	],
	"delete"	: $[
	    "type"	: "regex",
	    "typespec"	: "(\[[0-9a-f:]+\]:[0-9]+)|([0-9]+)|([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)",
	    "help"	: _("Delete already existing listen entry ([address:]port)"),
	],
	"list"		: $[
	    "help"	: _("List already configured entries"),
	],
	"enable"	: $[
	    "type"	: "regex",
	    "typespec"	: ".+(,.+)*",
	    "help"	: _("Comma separated list of modules to be enabled")
	],
	"disable"	: $[
	    "type"	: "regex",
	    "typespec"	: ".+(,.+)*",
	    "help"	: _("Comma separated list of modules to be disabled")
	]
    ],
    "mappings"		: $[
	"configure"	: [ "host", "servername", "serveradmin", "documentroot" ],
	"modules"	: [ "enable", "disable", "list" ],
	"listen"	: [ "add", "delete", "list" ]
    ]
];

define boolean ConfigureHandler(map options) ``{
    Report::Error( "This is not implemented yet." );
    return false;
}

define boolean ModulesHandler(map options) ``{
    Report::Error( "This is not implemented yet." );
    return false;
}

define boolean ListenHandler(map options) ``{
    Report::Error( "This is not implemented yet." );
    return false;
}

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("HttpServer module started");

include "http-server/wizards.ycp";

/* is this proposal or not? */
boolean propose = false;
list args = WFM::Args();
if(size(args) > 0) {
    if(is(WFM::Args(0), path) && WFM::Args(0) == .propose) {
        y2milestone("Using PROPOSE mode");
        propose = true;
    }
}

// check rpms
if( !Require::RequireAndConflictTarget( ["apache2"], [],
    _("<p>To configure the HTTP server, the <b>%1</b> package must be installed.</p>") +
    // notification 2/2
    _("<p>Do you want to install it now?</p>")) )
{
    return false;
}

/* main ui function */
any ret = nil;

if(propose) ret = HttpServerAutoSequence();
else ret = CommandLineRun(cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("HttpServer module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
