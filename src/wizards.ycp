/**
 * File:	include/http-server/wizards.ycp
 * Package:	Configuration of http-server
 * Summary:	Wizards definitions
 * Authors:	Stanislav Visnovsky <visnov@suse.cz>
 *
 * $Id$
 */

{

textdomain "http-server";

import "Label";
import "Sequencer";
import "Wizard";
import "Directory";

include "http-server/complex.ycp";
include "http-server/dialogs.ycp";
include "http-server/wizard-dialog.ycp";

define symbol MainSequence();

symbol VirtualHostSequence(string action){

    map aliases = $[
	"host"		:   ``( HostDialog() ),
	"addhost"	:   ``( AddHost() ),
	"setvhost"	:   ``( SetVHostOptions() ),
	"ssl"		:   ``( SSLDialog () ),
	"dir"		:   ``( DirDialog () ),
    ];

    string def = (action=="add")?"addhost":"host";
    map sequence = $[
	"ws_start" : def,
	"host" : $[
	    `abort	: `abort,
	    `next	: `next, //"overview",
	    `ssl	: "ssl",
	    `dir	: "dir"
	],

	"addhost": $[
	    `abort	: `abort,
	    `next	: "setvhost",
	],
	"setvhost": $[
	    `abort	: `abort,
	    `next	: `next, //"overview",
	    `back	: "addhost"
	],
	"ssl": $[
	    `abort	: `abort,
	    `next	: "host",
	    `back	: "host"
	],
	"dir": $[
	    `abort	: `abort,
	    `next	: "host",
	    `back	: "host"
	]
    ];

    return Sequencer::Run(aliases, sequence);
}

/**
 * Main workflow of the http-server configuration
 * @return sequence result
 */
symbol MainSequence() {

    map aliases = $[
	"overview"	:   ``( OverviewDialog() ),
	"addhost"	:   ``( AddHost() ),
	"setvhost"	:   ``( SetVHostOptions() ),
	"dir"		:   ``( DirDialog () ),
	"add-vh"	:   [ ``( VirtualHostSequence("add")), true ],
	"edit-vh"	:   [ ``( VirtualHostSequence("edit")), true ]
    ];

    map sequence = $[
	"ws_start" : "overview",
	"overview" : $[
	    `abort	: `abort,
	    `next	: `next,
	    `dir	: "dir",
	    `edit	: "edit-vh",
	    `add	: "add-vh",
	],
	"add-vh" : $[
	    `abort	: `abort,
	    `next	: "overview" //`next
	],
	"edit-vh" : $[
	    `abort	: `abort,
	    `next	: "overview" //`next
	],
	"setvhost": $[
	    `abort	: `abort,
	    `next	: "overview",
	    `back	: "addhost"
	],
	"dir": $[
	    `abort	: `abort,
	    `next	: "overview",
	    `back	: "overview"
	]
    ];

    symbol ret = Sequencer::Run(aliases, sequence);

    return ret;
}

/**
 * Sequences for wizard mode
 * @return sequence result
 */

symbol WizardSequence() {
	map aliases = $[
		"network-device":``(WizardSequence1()),
	        "modules"       :``(WizardSequence2()),
                "defhost"       :``(WizardSequence3()),
                "hosts"	        :``(WizardSequence4()),
                "summary"       :``(WizardSequence5()),
		"addhost"	: ``(AddHost()),
	        "setvhost"      :   ``( SetVHostOptions() ),
	        "ssl"           :   ``( SSLDialog () ),
		"dir"           :   ``( DirDialog () ),
	        "main"  	:   ``( MainSequence() ),
	        "host"          :   ``( HostDialog() )
	];

	map sequence =	$[
		"ws_start" : "network-device",
		"network-device"  : $[
		`abort	   : `abort,
		`next	   : "modules"
		],
               "modules"  : $[
                `abort     : `abort,
                `next      : "defhost"
		],
               "defhost"  : $[
                `abort     : `abort,
                `next      : "hosts",
		`ssl	   : "ssl",
		`dir	   : "dir"
                ],
	       "ssl"	  : $[
		`abort	  : `abort,
		`next	  : "defhost"
		],
               "dir"      : $[
                `abort    : `abort,
                `next     : "defhost"
                ],
               "hosts"  : $[
                `abort     : `abort,
                `next      : "summary",
                `add        : "addhost",
		`edit	   : "host"
                ],
		"addhost"  : $[
		`abort	   : `abort,
		`next	   : "setvhost",
		`back	   : "hosts"
		], 
	        "setvhost": $[
	            `abort      : `abort,
	            `next       : "hosts",
	            `back       : "addhost"
	        ],
               "summary"  : $[
                `abort     : `abort,
		`next	  : `next,
		`expert	  : "main"
                ],
	       "host"	  : $[
		`abort	  : `abort,
		`ssl	  : "ssl",
		`next	  : "hosts",
		`dir	  : "dir"
		],
	       "main"	  : $[
		`abort	  : `abort, 
		`next	  : `next
		]
	];

        symbol ret = Sequencer::Run(aliases, sequence);
        return ret;
}

 /**
  * Sequences for whole server
  * @return boolean correct finish
  */
boolean HttpServerSequence() {

    map aliases = $[
	"read"	: [ ``( ReadDialog() ), true ],
	"main"	:   ``( MainSequence() ),
	"wizard" : ``( WizardSequence() ),
	"write"	: [ ``( WriteDialog() ), true ]
    ];

    map sequence = $[
	"ws_start" : "read",
	"read" : $[
	    `abort	: `abort,
	    `next	: "main"
	],
	"main" : $[
	    `abort	: `abort,
	    `next	: "write"
	],
	"wizard" : $[
	    `abort	: `abort,
	    `next	: "write"
	],
	"write" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    Wizard::CreateDialog();
    Wizard::SetDesktopTitleAndIcon("http-server");

    boolean w_mode=HttpServer::isWizardMode();
    if (w_mode) sequence["read", `next] = "wizard";

    symbol ret = Sequencer::Run(aliases, sequence);
    if (w_mode) HttpServer::setWizardMode(false);

    UI::CloseDialog();
    return ret == `next;
}

/**
 * Whole configuration of http-server but without reading and writing.
 * For use with autoinstallation.
 * @return sequence result
 */
symbol HttpServerAutoSequence() {
    // translators: initialization dialog caption
    string caption = _("HTTP Server Configuration");
    // translators: initialization dialog message
    term contents = `Label(_("Initializing ..."));

    Wizard::CreateDialog();
    Wizard::SetDesktopTitleAndIcon("http-server");
    Wizard::SetContentsButtons(caption, contents, "",
	    Label::BackButton(), Label::NextButton());

    symbol ret = MainSequence();

    UI::CloseDialog();
    return ret;
}

/* EOF */
}
